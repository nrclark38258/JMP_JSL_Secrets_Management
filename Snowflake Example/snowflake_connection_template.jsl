/* Author:
	Nathan Clark, nrclark@gmail.com
	@nrclark38258
	Copyright 2025
*/

Names Default To Here(1);

get_secrets = Function({key},
	/*
	This function retrieves secrets based on the provided key. It is designed to protect sensitive information
	and should only be called with the correct passphrase.

	Args:
		key (string): The passphrase required to access the secrets.

	Returns:
		secrets (associative array): The secrets map containing the username and password.

	Throws:
		Throws an error if the key is incorrect.
	*/

	If(key != "wouldntYouLikeToKnow",
		Throw("Access denied")
	);
	[
		"UserName" => "inigoMontoya",
		"Password" => "prepareToDie"
	]
);

create_snowflake_connection = Function({},{secrets},
	/*
	This function creates a new Snowflake connection using the provided secrets. The passphrase is necessary
	for 'get_secrets' to work. Specific snowflake connection pieces will change based on your organization's
	configuration.

	Args:
		none

	Local Vars:
		secrets (associative array): The secrets map containing the username and password. Forced local so
		easier to mask.

	Returns:
		dc (new data connection): A new Snowflake data connector.
	*/

	secrets = get_secrets("wouldntYouLikeToKnow");
	dc = New Data Connector(
		Type( "ODBC" ),
		Driver("SnowflakeDSIIDriver"),
		Database( "[your database]" ),
		Server( "[your company snowflake server]" ),
		User(secrets["UserName"]),
		Password(secrets["Password"]),
		Connection("AUTHENTICATOR=;NO_PROXY=;PROXY=;ROLE=[your role];TRACING=4;WAREHOUSE=[default warehouse];")
	);
	return(dc);
);

snowflake_scrubbed_query = Function({queryName, queryString},{default local},
	/*
	This function runs a query and cleans up the resulting table. It can be noted there are additional parameters
	with 'New SQL Query' which may allow for "Run" as oppoed to "Run Foreground" to allow paralell work to happen
	but still clean the table after completion.

	Args:
		queryName (string): The name of the query and the resulting JMP table name.
		queryString (string): The SQL query to run in standard snowflake SQL.

	Returns:
		table (data table): A JMP data table from the query

	Test var values:
		queryName: "Test Query"
		queryString: "SELECT * FROM test_table"
	*/

	table = New SQL Query(
		Connection( create_snowflake_connection() ),
		QueryName( queryName ),
		CustomSQL( queryString )
	) << Run Foreground;

	list = table << get table script names();
	table << delete scripts(list);

	Return(table)
);


